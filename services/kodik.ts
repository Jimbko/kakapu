import { KodikSearchResult, ShikimoriAnime } from "../types";

/**
 * –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ Kodik, –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—à —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π API-—Ä–æ—É—Ç.
 */
const searchKodik = async (params: { shikimori_id?: number; title?: string }): Promise<KodikSearchResult | null> => {
    try {
        const body: { shikimori_id?: number; title?: string } = {};
        if (params.shikimori_id) {
            body.shikimori_id = params.shikimori_id;
        }
        if (params.title) {
            body.title = params.title;
        }

        console.log(`üîç –ü–æ–∏—Å–∫ –≤ Kodik —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π API:`, body);
        
        const response = await fetch('/api/kodik', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(body)
        });

        if (!response.ok) {
            console.error(`Local Kodik API endpoint error: ${response.status}`);
            return null;
        }

        const data = await response.json();
        // API-—Ä–æ—É—Ç –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Kodik
        return (data.results && data.results.length > 0) ? data.results[0] : null;
    } catch (error) {
        console.error('Kodik search through local API failed:', error);
        return null;
    }
};

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–ª–µ–µ—Ä–∞ —Å –º–Ω–æ–≥–æ—Å—Ç—É–ø–µ–Ω—á–∞—Ç–æ–π –ª–æ–≥–∏–∫–æ–π.
 */
export const findKodikPlayer = async (anime: ShikimoriAnime): Promise<KodikSearchResult | null> => {
    // 1. –ü–æ–∏—Å–∫ –ø–æ Shikimori ID (—Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π)
    console.log(`Kodik: –ü–æ–∏—Å–∫ –ø–æ shikimori_id ${anime.id}`);
    let result = await searchKodik({ shikimori_id: anime.id });
    if (result) return result;

    // 2. –§–æ–ª–±—ç–∫ –Ω–∞ —Ä—É—Å—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    if (anime.russian) {
        console.log(`Kodik: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ shikimori_id. –ò—â—É –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é: "${anime.russian}"`);
        result = await searchKodik({ title: anime.russian });
        if (result) return result;
    }

    // 3. –§–æ–ª–±—ç–∫ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    console.log(`Kodik: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ —Ä—É—Å—Å–∫–æ–º—É –Ω–∞–∑–≤–∞–Ω–∏—é. –ò—â—É –ø–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É: "${anime.name}"`);
    result = await searchKodik({ title: anime.name });
    if (result) return result;
    
    // 4. –§–æ–ª–±—ç–∫ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    if (anime.english && anime.english.length > 0) {
        for (const title of anime.english) {
            if (title) {
                console.log(`Kodik: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º—É. –ò—â—É –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É: "${title}"`);
                result = await searchKodik({ title: title });
                if (result) return result;
            }
        }
    }

    console.log(`Kodik: –ü–ª–µ–µ—Ä –¥–ª—è –∞–Ω–∏–º–µ ID ${anime.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫.`);
    return null;
};